name: Coding Standards

on:
    push:
    pull_request:

jobs:
    coding-standards:
        strategy:
            matrix:
                php_version: ["8.0", "8.1", "8.2", "8.3"]
        name: Coding standards
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Cache Composer dependencies
              uses: actions/cache@v2
              with:
                  path: /tmp/composer-cache
                  key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
            - name: Install PHP dependencies (composer install)
              uses: php-actions/composer@v6
              with:
                php_version: ${{ matrix.php_version }}
                php_extensions: xsl intl
                args: --no-plugins
            - name: Use Node.js 12.x
              uses: actions/setup-node@v1
              with:
                  node-version: 12.x
            - name: Install JS dependencies (npm install)
              run: npm i --ignore-scripts --production=false
            - name: PHP CS Fixer
              run: composer run php-cs-fixer
            - name: PHP Stan
              run: composer run phpstan
            - name: PHP MD
              run: composer run phpmd
            - name: CSS stylelint
              run: npm run lint:css
            - name: ESLint
              run: npm run lint:js

    tests:
        strategy:
            matrix:
                php_version: ["8.0", "8.1", "8.2", "8.3"]
        name: Coding standards
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Cache Composer dependencies
              uses: actions/cache@v2
              with:
                  path: /tmp/composer-cache
                  key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
            - name: Install PHP dependencies (composer install)
              uses: php-actions/composer@v6
              with:
                php_version: ${{ matrix.php_version }}
                php_extensions: xsl intl
                args: --no-plugins
            - name: PHPUnit
              run: composer run test
